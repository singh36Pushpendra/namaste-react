Custom Hooks:-

Single responsibility principle:-

Maintaining our code into modular fashion:-
Breaking code into small-small modules(components, functions...), makes testing easy

How to apply single responsibility principle:-
No any hard rule but just keeping component as light as possible, makes clean, readable code.

How to create our own custom hooks?
Hooks: Hooks are like utility functions.

Separate file for Separate hook - good convention to follow
always start with 'use' prefix -> React understands that
recommended convention: file name = hook name 

linters -> restrict to convention of library.

Same things to break down app into small chunks.
(Logical separation of bundles)
App Chunking
Code Splitting
Dynamic Bundling
lazy loading => Will not load the code for grocery, when go to the link then
                only it will load.

lazy loading or on demand loading
for Grocery.js

Creating a separate bundle for Grocery.

react tries to render grocery but
state causes the error when using lazy loading:
Error: A component suspended while responding to synchronous input.
 This will cause the UI to be replaced with a loading indicator.
  To fix, updates that suspend should be wrapped with startTransition.

To handle this error we need to wrap our Grocery component
with Suspense component.
